/*
 * @Autor: cong99
 * @Date: 2021-03-29 16:42:28
 * @LastEditors: cong99
 * @LastEditTime: 2021-03-30 16:48:02
 */
import { defineConfig } from 'vite'
import path from 'path'

/** 工具方法 */
const resolve = dir => path.join(__dirname, dir)

// https://vitejs.dev/config/
export default defineConfig({
	resolve: {
		alias: {
			'@': resolve('src')
		}
	},
	build: {
		lib: {
			// 库打包入口文件
			entry: resolve('src/index.js'),
			// 库暴露的全局变量
			name: 'VoerkaMessager'
		},
		rollupOptions: {
			// 请确保外部化那些你的库中不需要的依赖
			// 如果依赖装在dependencies，则别人安装我们的包时也会取下载那些包，此处把他们弄成外部依赖可以减少本包的打包体积，适合于常用包（外层也会装，比如lodash）或者大体积的包
			// 如果依赖装在devDependencies，表示我们的包会将那些包打包进来，别人装的时候就不会取装了，适合于可以摇树的包或者小包
			external: ['mqtt/dist/mqtt', 'msgpack5/dist/msgpack5'],
			output: {
				// 在 UMD 构建模式下为这些外部化的依赖提供一个全局变量
				// 这里仅作用于UMD包，如果打出来的时es包，则无所谓的(那样情况下umd的包用不了)
				globals: {
					'msgpack5/dist/msgpack5': 'msgpack5',
					'mqtt/dist/mqtt': 'mqtt'
				}
			}
		}
	}
})
