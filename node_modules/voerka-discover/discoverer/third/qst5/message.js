const vstruct = require('varstruct');
const { MessageBase } = require('protocols/serializers');

class Qts5MessageBase extends MessageBase {
    static get cmdType() {
        return 0x00;
    }
    static get struct() {
        return [
            { name: 'cmdType', type: vstruct.UInt32BE },
        ]
    }
    static get schema() {
        return {
            type: 'object',
            properties: {
                cmdType: { type: 'integer', minimum: 0, maximum: 255 },
            }
        }
    }
    constructor(body={}) {super(body);
        this.body = Object.assign({
            cmdType: this.constructor.cmdType || Qts5MessageBase.cmdType,
        }, body);
    }
}

// 1. 发现设备
// 发起邀请
class Qts5InvitationMessage extends Qts5MessageBase {
    static get cmdType() {
        return 0x00;
    }
    static get struct() {
        return [
            { name: 'cmdType', type: vstruct.UInt32BE },
            { name: 'reserverdField', type: vstruct.String(17) },
        ]
    }
}
// 接受邀请
class Qts5AcceptationMessage extends Qts5MessageBase {
    static get sidKey() {
        return false;
    }
    static get cmdType() {
        return 0x65;
    }
    static get struct() {
        return [
            { name: 'cmdType', type: vstruct.UInt32BE },
            { name: 'mac', type: vstruct.String(17) },
            { name: 'seq', type: vstruct.UInt32BE },
        ]
    }
    static get schema() {
        return {
            type: 'object',
            properties: {
                cmdType: { type: 'integer', minimum: 0, maximum: 255 },
                mac: { type: 'string', minLength: 17, maxLength: 17 },
                seq: { type: 'integer', minimum: 0, maximum: 255, default: 0 },
            }
        }
    }
}

// test config
class Qts5TestConfigMessage extends Qts5MessageBase {
    static get cmdType() {
        return 0x66;
    }
    static get struct() {
        return [
            { name: 'cmdType', type: vstruct.UInt32BE },
            { name: 'mac', type: vstruct.String(17) },
            { name: 'seq', type: vstruct.UInt32BE },
        ]
    }
    static get schema() {
        return {
            type: 'object',
            properties: {
                cmdType: { type: 'integer', minimum: 0, maximum: 255 },
                mac: { type: 'string', minLength: 17, maxLength: 17 },
                seq: { type: 'integer', minimum: 0, maximum: 255, default: 0 },
            }
        }
    }
}

// 2、设置设备网络信息
// （待填）

// 3. 获取设备网络信息
// （待填）

// 4、发送显示数据
// （待填）
class Qts5DisplayTextMessage extends MessageBase {
    customStructEncoder(data) {
        this.body;  // 传入的数据
        return new Buffer();  // 自定义 buffer
    }
}

// 5、同步时间
// （待填）

const Qts5MessageMap = {
    Qts5InvitationMessage,
    Qts5AcceptationMessage,
    Qts5TestConfigMessage,
    Qts5DisplayTextMessage,
};

const Qts5CmdTypeMessageMap = {};
for (let key in Qts5MessageMap) {
    let Message = Qts5MessageMap[key];
    Qts5CmdTypeMessageMap[Message.cmdType] = Message;
}
Qts5MessageBase.getMessageByCmdType = cmdType => Qts5CmdTypeMessageMap[cmdType];

module.exports = {
    Qts5MessageBase,
    Qts5InvitationMessage,
    Qts5AcceptationMessage,
    Qts5TestConfigMessage,
    Qts5DisplayTextMessage,
};
