const { AcceptationMessage, CommandMessage, ConfigResponseMessage } = require('./message');
const { msgStructBufferDeserialize: descrialize } = require('../serializers');

exports.msgStructBufferDeserialize = data => {
    let err;
    // 因为这两种消息没有 Cmd，所以先按这两种消息体解码
    // 而 CommandMessage 消息有 Cmd，所以要放在后面
    // 否则可能因为 AcceptationMessage 或 ConfigResponseMessage 没有 Cmd，
    // 于是导致解码出 Cmd = 0，从而导致解码成 CommandMessage
    for (let Message of [AcceptationMessage, ConfigResponseMessage]) {
        try {
            return descrialize(Message, data);
        } catch (e) {
            err = e;
        }
    }
    let { Cmd: cmdType } = descrialize(CommandMessage, data);
    let Message = CommandMessage.getMessageByCmdType(cmdType);
    if (Message) {
        try {
            return descrialize(Message, data);
        } catch (e) {
            err = e;
        }
    }
    throw err;  // not new Error() so that it can be easily to go to the real error spot by error stack
};