exports.isNumber = function(val){
    return !isNaN(parseFloat(n)) && isFinite(n)
}

exports.isJson = function(val={}){
    for(let key in val) {
        return false
    }
    return true
}

exports.isEmptyJson = function(cls) {
    if (typeof(cls) === 'function') {
        return String(cls).startsWith("class")
    }
    return false;
}

exports.isClass = function(val) {
    return typeof val === 'function' && !val.hasOwnProperty('caller') && !val.hasOwnProperty('arguments');
    // return typeof val === 'function' && /^class\s/.test(val + '');
    // return val instanceof Object && val.constructor === Object
}

exports.isObject = function(val) {
    return isObject(val) && (() => {
        for (let x in val) return false;
        return true;
    })();
}

exports.isJsonBuffer = function isJsonBuffer(buf) {
    if (buf[0] == 0x7b && buf[buf.length - 1] == 0x7d) return true;
    if (buf[0] == 0x5b && buf[buf.length - 1] == 0x5d) return true;
    return false;
}

const isPlainObject = function (obj) {
  return obj ? obj.constructor === Object : false
}
exports.isPlainObject = isPlainObject
isEmpty = function (obj) {
    for (let key in obj) {
        if (obj.hasOwnProperty(key)) return false
    }
    return true
}
exports.isEmpty = isEmpty
exports.isEmptyPlainObject = function (obj) {
    return isPlainObject(obj) && isEmpty(obj);
}
